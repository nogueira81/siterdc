@model rdc.Models.Reclamacao

@{
    ViewBag.Title = "Editar";
    //     
    // Criação de uma lista para o selectlist     
    //        
    var list = new[] {
                new {value = "N", text = "Sem Solução do Fornecedor"},
                new {value = "I", text = "Resolvido e continuo Insatisfeito"},
                new {value = "C", text = "Resolvido e estou Satisfeito"},
            };
    var selecList = new SelectList(list, "value", "text", Model.tiposolucao);
}

<h2>Editar a Reclamação do Cliente</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Editar a Reclamação</legend>

        @Html.HiddenFor(model => model.idreclamacao)

        <div class="editor-label">
            @Html.LabelFor(model => model.IDCLIENTE)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.IDCLIENTE)
            @Html.TextBoxFor(model => model.cliente.LOGIN, new { disabled = "disabled", @readonly = "readonly" }) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.datacompra)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.datacompra)
            @Html.ValidationMessageFor(model => model.datacompra)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.titulo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.titulo)
            @Html.ValidationMessageFor(model => model.titulo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.descricao)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.descricao, new { style = "width: 100%", @rows = "8" })
            @Html.ValidationMessageFor(model => model.descricao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.tiposolucao)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.tiposolucao, selecList, "[Selecione]") 
            @Html.ValidationMessageFor(model => model.tiposolucao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.datasolucao)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.datasolucao)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IDFORNECEDOR)
        </div>
        <div class="editor-field">
            @Html.DropDownList("IDFORNECEDOR", "[Selecione]")
            @Html.ValidationMessageFor(model => model.IDFORNECEDOR)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.fonecontato)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.fonecontato)
            @Html.ValidationMessageFor(model => model.fonecontato)
        </div>

        <p>
            <input type="submit" class="button" value="Salvar" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Voltar para Lista", "Index")
</div>
