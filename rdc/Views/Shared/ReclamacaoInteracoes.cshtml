@model rdc.Models.Reclamacao
@using rdc.Models
@{
    //Essa PartialView funciona como um componente que pode ser chamado de qualquer lugar bastando passar 1 reclamação
    //preenchida para que a mesma se encarregue de chamar as demais PartialView's com seus parâmentros adequados.
    ViewBag.Title = "Interacões da Reclamação";
    sistemardcEntities dbrec = new sistemardcEntities();
    //Recupera todos os campos do registro do cliente dessa reclamação
    Model.cliente = dbrec.clientes.First(c => c.IDCLIENTE == Model.IDCLIENTE);
    //Recupera todos os campos do registro do fornecedor dessa reclamação
    Model.fornecedore = dbrec.fornecedores.First(c => c.IDFORNECEDOR == Model.IDFORNECEDOR);
    //Recupera os registros de interações caso existam para cada reclamação
    Model.Interacoes = dbrec.ExecuteStoreQuery<interaco>("select * from interacoes" +
                  " order by DATAINTERACAO desc").ToList().FindAll(c => c.IDRECLAMACAO == Model.idreclamacao);
    //Percorrer todas as Interações dessa reclamação e preencher o Cliente com todos os dados
    foreach (var item in Model.Interacoes)
    {
        item.cliente = dbrec.clientes.First(c => c.IDCLIENTE == item.IDCLIENTE);
        //Preencher somente o Login do dono da reclamação para verificar no momento de montar a exclusão da interação
        item.reclamaco.cliente.LOGIN = Model.cliente.LOGIN;
    }
    Model.Interacao = new Interacao();
    Model.Interacao.IDRECLAMACAO = Model.idreclamacao;
    dbrec.Dispose();
}

<fieldset width: 100%>
    <legend>Interações da Reclamação</legend>
    <br />
    <table>
        <tr>
            <td class="tdinteracaoleft">
                <b>@Html.DisplayFor(model => model.titulo)</b><br /><br />
                Data da Reclamação : @string.Format("{0:dd/MM/yyyy}", Model.datareclamacao)<br /><br />
                Data da Compra : @string.Format("{0:dd/MM/yyyy}", Model.datacompra)<br /><br />
                Reclamação do Login : <b>@Html.DisplayFor(model => model.cliente.LOGIN)</b><br />
                @{
                    //Somente irá mostrar quando o Cliente for vinculado a um fornecedor
                    sistemardcEntities dbCli = new sistemardcEntities();
                    string Login = @Context.User.Identity.Name;
                    if (!string.IsNullOrEmpty(Login))
                    {
                        var RecCli = from clientes in dbCli.clientes where clientes.LOGIN == Login select clientes;
                        int? idforcli = RecCli.First().IDFORNECEDOR;
                        dbCli.Dispose();
                        if (idforcli != null)
                        {
                            if (Model.IDFORNECEDOR == idforcli)
                            {
                                @Html.LabelFor(modelItem => Model.fonecontato, "Contato : ")
                                <b>@Html.LabelFor(modelItem => Model.fonecontato, Model.fonecontato)</b>
                                <br />
                                @Html.LabelFor(modelItem => Model.cliente.EMAIL, "E-mail : ")
                                <b>@Html.LabelFor(modelItem => Model.cliente.EMAIL, Model.cliente.EMAIL)</b>
                                <br />
                            }
                        }
                    }
                }
                <br />
                Fornecedor : <b>@Html.DisplayFor(model => model.fornecedore.razaosocial)</b><br /><br />
                Reclamação se encontra : <br />
                @{switch (Model.tiposolucao)
                  {
                      case "N": 
                            <div class="error"><b>@Html.Label("Sem Solução do Fornecedor")</b></div>
                                             break;
                      case "I":
                            <div class="insuccess"><b>@Html.Label("Resolvido e continuo Insatisfeito")</b></div>
                            <br />  @Html.Label("Data da Solução :") @string.Format("{0:dd/MM/yyyy}", Model.datasolucao);
                                                                                                                        break;
                      case "C":
                            <div class="success"><b>@Html.Label("Resolvido e estou Satisfeito")</b></div>
                            <br />  @Html.Label("Data da Solução :") @string.Format("{0:dd/MM/yyyy}", Model.datasolucao);
                                                                                                                        break;
                  }
                }
            </td>
            <td class="tdinteracaorigth">
                @Html.TextAreaFor(model => model.descricao, new { style = "width: 100%", @rows = "15", @disabled = true })
            </td>
        </tr>
    </table>
    @Html.Partial("RecInteracoes", Model.Interacoes)
</fieldset>

<p>
    @Html.Partial("CreateInteracao", Model.Interacao)
</p>